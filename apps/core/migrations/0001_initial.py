# Generated by Django 5.2.4 on 2025-08-08 15:58

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AppSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cle', models.CharField(db_index=True, help_text='Clé unique du paramètre', max_length=100, unique=True, verbose_name='Clé')),
                ('valeur', models.TextField(help_text='Valeur du paramètre', verbose_name='Valeur')),
                ('type_valeur', models.CharField(choices=[('STRING', 'Chaîne de caractères'), ('INTEGER', 'Nombre entier'), ('FLOAT', 'Nombre décimal'), ('BOOLEAN', 'Booléen'), ('JSON', 'JSON')], default='STRING', help_text='Type de données de la valeur', max_length=10, verbose_name='Type de valeur')),
                ('description', models.TextField(blank=True, help_text='Description du paramètre', validators=[django.core.validators.MaxLengthValidator(1000)], verbose_name='Description')),
                ('categorie', models.CharField(db_index=True, default='GENERAL', help_text='Catégorie du paramètre', max_length=50, verbose_name='Catégorie')),
                ('modifiable', models.BooleanField(default=True, help_text="Paramètre modifiable via l'interface admin", verbose_name='Modifiable')),
                ('date_creation', models.DateTimeField(auto_now_add=True, help_text='Date de création du paramètre', verbose_name='Date de création')),
                ('date_modification', models.DateTimeField(auto_now=True, help_text='Date de dernière modification', verbose_name='Date de modification')),
            ],
            options={
                'verbose_name': "Paramètre d'application",
                'verbose_name_plural': "Paramètres d'application",
                'ordering': ['categorie', 'cle'],
                'indexes': [models.Index(fields=['cle'], name='appsettings_key_idx'), models.Index(fields=['categorie'], name='appsettings_category_idx')],
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('CREATE', 'Création'), ('UPDATE', 'Modification'), ('DELETE', 'Suppression'), ('LOGIN', 'Connexion'), ('LOGOUT', 'Déconnexion'), ('APPROVE', 'Approbation'), ('REJECT', 'Rejet'), ('PAYMENT', 'Paiement'), ('REFUND', 'Remboursement'), ('EXPORT', 'Export'), ('IMPORT', 'Import'), ('CONFIG', 'Configuration'), ('SECURITY_EVENT', 'Événement de sécurité')], db_index=True, help_text="Type d'action effectuée", max_length=20, verbose_name='Action')),
                ('description', models.TextField(help_text="Description détaillée de l'action", validators=[django.core.validators.MaxLengthValidator(2000)], verbose_name='Description')),
                ('object_id', models.PositiveIntegerField(blank=True, help_text="ID de l'objet concerné", null=True)),
                ('adresse_ip', models.GenericIPAddressField(blank=True, db_index=True, help_text="Adresse IP de l'utilisateur", null=True, verbose_name='Adresse IP')),
                ('user_agent', models.TextField(blank=True, help_text='User Agent du navigateur', validators=[django.core.validators.MaxLengthValidator(500)], verbose_name='User Agent')),
                ('donnees_avant', models.JSONField(blank=True, default=dict, help_text="État de l'objet avant modification", verbose_name='Données avant')),
                ('donnees_apres', models.JSONField(blank=True, default=dict, help_text="État de l'objet après modification", verbose_name='Données après')),
                ('date_action', models.DateTimeField(auto_now_add=True, db_index=True, help_text="Date et heure de l'action", verbose_name="Date de l'action")),
                ('content_type', models.ForeignKey(blank=True, help_text="Type d'objet concerné", null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('utilisateur', models.ForeignKey(blank=True, help_text="Utilisateur qui a effectué l'action", null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_logs', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': "Log d'audit",
                'verbose_name_plural': "Logs d'audit",
                'ordering': ['-date_action'],
                'indexes': [models.Index(fields=['utilisateur', 'date_action'], name='auditlog_user_date'), models.Index(fields=['action', 'date_action'], name='auditlog_action_date'), models.Index(fields=['content_type', 'object_id'], name='auditlog_content_obj'), models.Index(fields=['adresse_ip', 'date_action'], name='auditlog_ip_date')],
            },
        ),
        migrations.CreateModel(
            name='ContactMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(help_text="Nom de l'expéditeur", max_length=100, validators=[django.core.validators.MaxLengthValidator(100)], verbose_name='Nom')),
                ('email', models.EmailField(help_text="Email de l'expéditeur", max_length=254, validators=[django.core.validators.EmailValidator()], verbose_name='Email')),
                ('telephone', models.CharField(blank=True, help_text='Numéro de téléphone (optionnel)', max_length=15, validators=[django.core.validators.MaxLengthValidator(15)], verbose_name='Téléphone')),
                ('categorie', models.CharField(choices=[('SUPPORT', 'Support technique'), ('FACTURATION', 'Facturation'), ('SUGGESTION', 'Suggestion'), ('PLAINTE', 'Plainte'), ('AUTRE', 'Autre')], db_index=True, default='SUPPORT', help_text='Catégorie du message', max_length=20, verbose_name='Catégorie')),
                ('sujet', models.CharField(help_text='Sujet du message', max_length=200, validators=[django.core.validators.MaxLengthValidator(200)], verbose_name='Sujet')),
                ('message', models.TextField(help_text='Contenu du message', validators=[django.core.validators.MaxLengthValidator(5000)], verbose_name='Message')),
                ('statut', models.CharField(choices=[('NOUVEAU', 'Nouveau'), ('EN_COURS', 'En cours de traitement'), ('RESOLU', 'Résolu'), ('FERME', 'Fermé')], db_index=True, default='NOUVEAU', help_text='Statut du message', max_length=20, verbose_name='Statut')),
                ('reponse', models.TextField(blank=True, help_text="Réponse de l'équipe", validators=[django.core.validators.MaxLengthValidator(5000)], verbose_name='Réponse')),
                ('date_creation', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Date de réception du message', verbose_name='Date de création')),
                ('date_traitement', models.DateTimeField(blank=True, help_text='Date de première prise en charge', null=True, verbose_name='Date de traitement')),
                ('date_resolution', models.DateTimeField(blank=True, help_text='Date de résolution du message', null=True, verbose_name='Date de résolution')),
                ('adresse_ip', models.GenericIPAddressField(blank=True, db_index=True, help_text="Adresse IP de l'expéditeur", null=True, verbose_name='Adresse IP')),
                ('assigne_a', models.ForeignKey(blank=True, help_text="Membre de l'équipe assigné", null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_messages', to=settings.AUTH_USER_MODEL, verbose_name='Assigné à')),
                ('utilisateur', models.ForeignKey(blank=True, help_text='Utilisateur expéditeur (si connecté)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contact_messages', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Message de contact',
                'verbose_name_plural': 'Messages de contact',
                'ordering': ['-date_creation'],
                'indexes': [models.Index(fields=['statut', 'date_creation'], name='contact_msg_status_date'), models.Index(fields=['categorie', 'statut'], name='contact_msg_category_status'), models.Index(fields=['assigne_a', 'statut'], name='contact_msg_assignee_status')],
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(help_text='Question fréquemment posée', max_length=300, unique=True, validators=[django.core.validators.MaxLengthValidator(300)], verbose_name='Question')),
                ('reponse', models.TextField(help_text='Réponse détaillée à la question', validators=[django.core.validators.MaxLengthValidator(10000)], verbose_name='Réponse')),
                ('categorie', models.CharField(choices=[('GENERAL', 'Général'), ('COMPTE', 'Compte utilisateur'), ('EVENEMENTS', 'Événements'), ('PAIEMENTS', 'Paiements'), ('ABONNEMENTS', 'Abonnements'), ('TECHNIQUE', 'Technique'), ('SECURITE', 'Sécurité')], db_index=True, default='GENERAL', help_text='Catégorie de la question', max_length=20, verbose_name='Catégorie')),
                ('ordre', models.PositiveIntegerField(db_index=True, default=0, help_text="Ordre d'affichage dans la liste", verbose_name="Ordre d'affichage")),
                ('actif', models.BooleanField(db_index=True, default=True, help_text='Question visible publiquement', verbose_name='Actif')),
                ('nombre_vues', models.PositiveIntegerField(default=0, help_text='Nombre de fois que la question a été consultée', verbose_name='Nombre de vues')),
                ('utile_oui', models.PositiveIntegerField(default=0, help_text="Nombre de votes 'utile'", verbose_name='Votes utiles')),
                ('utile_non', models.PositiveIntegerField(default=0, help_text="Nombre de votes 'non utile'", verbose_name='Votes non utiles')),
                ('date_creation', models.DateTimeField(auto_now_add=True, help_text='Date de création de la FAQ', verbose_name='Date de création')),
                ('date_modification', models.DateTimeField(auto_now=True, help_text='Date de dernière modification', verbose_name='Date de modification')),
                ('createur', models.ForeignKey(blank=True, help_text='Utilisateur qui a créé cette FAQ', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='faqs_created', to=settings.AUTH_USER_MODEL, verbose_name='Créateur')),
            ],
            options={
                'verbose_name': 'Question fréquente',
                'verbose_name_plural': 'Questions fréquentes',
                'ordering': ['categorie', 'ordre', 'question'],
                'indexes': [models.Index(fields=['categorie', 'actif'], name='faq_category_active'), models.Index(fields=['actif', 'ordre'], name='faq_active_order'), models.Index(fields=['question'], name='faq_question_idx')],
            },
        ),
        migrations.CreateModel(
            name='SystemStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(help_text='Titre du statut ou incident', max_length=200, validators=[django.core.validators.MaxLengthValidator(200)], verbose_name='Titre')),
                ('description', models.TextField(help_text='Description détaillée', validators=[django.core.validators.MaxLengthValidator(2000)], verbose_name='Description')),
                ('statut', models.CharField(choices=[('OPERATIONNEL', 'Opérationnel'), ('DEGRADED', 'Performance dégradée'), ('MAINTENANCE', 'Maintenance programmée'), ('INCIDENT', 'Incident en cours'), ('HORS_LIGNE', 'Hors ligne')], db_index=True, default='OPERATIONNEL', help_text='Statut actuel du système', max_length=20, verbose_name='Statut')),
                ('severite', models.CharField(choices=[('INFO', 'Information'), ('ATTENTION', 'Attention'), ('CRITIQUE', 'Critique')], db_index=True, default='INFO', help_text='Niveau de sévérité', max_length=10, verbose_name='Sévérité')),
                ('date_debut', models.DateTimeField(help_text="Date de début de l'incident/maintenance", verbose_name='Date de début')),
                ('date_fin_prevue', models.DateTimeField(blank=True, help_text='Date de fin prévue', null=True, verbose_name='Date de fin prévue')),
                ('date_fin_reelle', models.DateTimeField(blank=True, help_text='Date de fin réelle', null=True, verbose_name='Date de fin réelle')),
                ('afficher_banniere', models.BooleanField(default=True, help_text="Afficher une bannière d'information", verbose_name='Afficher bannière')),
                ('bloquer_acces', models.BooleanField(default=False, help_text="Bloquer l'accès à l'application", verbose_name='Bloquer accès')),
                ('date_creation', models.DateTimeField(auto_now_add=True, help_text='Date de création du statut', verbose_name='Date de création')),
                ('date_modification', models.DateTimeField(auto_now=True, help_text='Date de dernière modification', verbose_name='Date de modification')),
                ('createur', models.ForeignKey(blank=True, help_text='Utilisateur qui a créé ce statut', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='system_statuses', to=settings.AUTH_USER_MODEL, verbose_name='Créateur')),
            ],
            options={
                'verbose_name': 'Statut système',
                'verbose_name_plural': 'Statuts système',
                'ordering': ['-date_creation'],
                'indexes': [models.Index(fields=['statut', 'date_debut'], name='systemstatus_status_start'), models.Index(fields=['severite', 'statut'], name='systemstatus_severity_status'), models.Index(fields=['date_debut', 'date_fin_prevue'], name='systemstatus_dates')],
            },
        ),
    ]
