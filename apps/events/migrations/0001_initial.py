# Generated by Django 5.2.4 on 2025-08-02 10:55

import django.core.validators
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(help_text="Titre de l'événement", max_length=200, verbose_name='Titre')),
                ('description', models.TextField(help_text="Description détaillée de l'événement", verbose_name='Description')),
                ('description_courte', models.CharField(blank=True, help_text='Résumé court pour les listes', max_length=300, verbose_name='Description courte')),
                ('date_debut', models.DateTimeField(help_text="Date et heure de début de l'événement", verbose_name='Date de début')),
                ('date_fin', models.DateTimeField(help_text="Date et heure de fin de l'événement", verbose_name='Date de fin')),
                ('lieu', models.CharField(help_text="Nom du lieu de l'événement", max_length=300, verbose_name='Lieu')),
                ('adresse', models.TextField(help_text='Adresse complète du lieu', verbose_name='Adresse')),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, help_text='Coordonnée latitude pour la carte', max_digits=10, null=True, verbose_name='Latitude')),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, help_text='Coordonnée longitude pour la carte', max_digits=11, null=True, verbose_name='Longitude')),
                ('lien_google_maps', models.URLField(blank=True, help_text='Lien vers Google Maps pour le lieu', verbose_name='Lien Google Maps')),
                ('type_acces', models.CharField(choices=[('GRATUIT', 'Gratuit'), ('PAYANT', 'Payant'), ('INVITATION', 'Sur invitation')], default='GRATUIT', help_text="Type d'accès à l'événement", max_length=20, verbose_name="Type d'accès")),
                ('prix', models.DecimalField(decimal_places=2, default=0, help_text="Prix d'entrée en FCFA", max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Prix')),
                ('capacite_max', models.PositiveIntegerField(blank=True, help_text='Nombre maximum de participants (optionnel)', null=True, verbose_name='Capacité maximale')),
                ('image_couverture', models.ImageField(help_text="Image principale de l'événement", upload_to='events/covers/', verbose_name='Image de couverture')),
                ('statut', models.CharField(choices=[('BROUILLON', 'Brouillon'), ('EN_ATTENTE', 'En attente de validation'), ('VALIDE', 'Validé'), ('REJETE', 'Rejeté'), ('ANNULE', 'Annulé'), ('TERMINE', 'Terminé')], default='BROUILLON', help_text="Statut de l'événement", max_length=20, verbose_name='Statut')),
                ('date_validation', models.DateTimeField(blank=True, help_text='Date de validation par un administrateur', null=True, verbose_name='Date de validation')),
                ('commentaire_validation', models.TextField(blank=True, help_text="Commentaire de l'administrateur", verbose_name='Commentaire de validation')),
                ('nombre_vues', models.PositiveIntegerField(default=0, help_text="Nombre de fois que l'événement a été consulté", verbose_name='Nombre de vues')),
                ('nombre_partages', models.PositiveIntegerField(default=0, help_text="Nombre de fois que l'événement a été partagé", verbose_name='Nombre de partages')),
                ('date_creation', models.DateTimeField(auto_now_add=True, help_text="Date de création de l'événement", verbose_name='Date de création')),
                ('date_modification', models.DateTimeField(auto_now=True, help_text='Date de dernière modification', verbose_name='Date de modification')),
                ('billetterie_activee', models.BooleanField(default=False, help_text='Utiliser le système de billetterie intégré', verbose_name='Billetterie activée')),
                ('commission_billetterie', models.DecimalField(decimal_places=2, default=10.0, help_text='Commission en pourcentage sur les ventes', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Commission billetterie')),
            ],
            options={
                'verbose_name': 'Événement',
                'verbose_name_plural': 'Événements',
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='EventCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(help_text='Nom de la catégorie (ex: Mariage, Festival, Conférence)', max_length=100, unique=True, verbose_name='Nom')),
                ('description', models.TextField(blank=True, help_text='Description de la catégorie', verbose_name='Description')),
                ('icone', models.CharField(blank=True, help_text="Nom de l'icône (ex: fas fa-music)", max_length=50, verbose_name='Icône')),
                ('couleur', models.CharField(default='#007bff', help_text='Couleur hexadécimale (ex: #007bff)', max_length=7, verbose_name='Couleur')),
                ('ordre', models.PositiveIntegerField(default=0, help_text="Ordre d'affichage dans les listes", verbose_name="Ordre d'affichage")),
                ('actif', models.BooleanField(default=True, help_text='Catégorie active et visible', verbose_name='Actif')),
            ],
            options={
                'verbose_name': "Catégorie d'événement",
                'verbose_name_plural': "Catégories d'événement",
                'ordering': ['ordre', 'nom'],
            },
        ),
        migrations.CreateModel(
            name='EventParticipation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statut', models.CharField(choices=[('INTERESSE', 'Intéressé'), ('PARTICIPE', 'Participe'), ('A_PARTICIPE', 'A participé'), ('ANNULE', 'Annulé')], default='INTERESSE', help_text='Type de participation', max_length=20, verbose_name='Statut')),
                ('date_participation', models.DateTimeField(auto_now_add=True, help_text="Date d'inscription à l'événement", verbose_name='Date de participation')),
                ('date_modification', models.DateTimeField(auto_now=True, help_text='Date de dernière modification du statut', verbose_name='Date de modification')),
                ('commentaire', models.TextField(blank=True, help_text='Commentaire du participant', verbose_name='Commentaire')),
            ],
            options={
                'verbose_name': 'Participation à un événement',
                'verbose_name_plural': 'Participations aux événements',
                'ordering': ['-date_participation'],
            },
        ),
        migrations.CreateModel(
            name='EventShare',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plateforme', models.CharField(choices=[('FACEBOOK', 'Facebook'), ('TWITTER', 'Twitter'), ('INSTAGRAM', 'Instagram'), ('WHATSAPP', 'WhatsApp'), ('LINKEDIN', 'LinkedIn'), ('EMAIL', 'Email'), ('LIEN', 'Lien direct')], help_text='Plateforme de partage', max_length=20, verbose_name='Plateforme')),
                ('date_partage', models.DateTimeField(auto_now_add=True, help_text='Date du partage', verbose_name='Date de partage')),
                ('lien_genere', models.URLField(blank=True, help_text='Lien personnalisé généré pour le partage', verbose_name='Lien généré')),
                ('nombre_clics', models.PositiveIntegerField(default=0, help_text='Nombre de clics sur le lien partagé', verbose_name='Nombre de clics')),
            ],
            options={
                'verbose_name': "Partage d'événement",
                'verbose_name_plural': "Partages d'événement",
                'ordering': ['-date_partage'],
            },
        ),
        migrations.CreateModel(
            name='EventTicket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identifiant unique du billet', unique=True, verbose_name='Identifiant unique')),
                ('prix', models.DecimalField(decimal_places=2, help_text='Prix payé pour le billet', max_digits=10, verbose_name='Prix')),
                ('quantite', models.PositiveIntegerField(default=1, help_text='Nombre de billets', verbose_name='Quantité')),
                ('statut', models.CharField(choices=[('EN_ATTENTE', 'En attente de paiement'), ('PAYE', 'Payé'), ('ANNULE', 'Annulé'), ('REMBOURSE', 'Remboursé'), ('UTILISE', 'Utilisé')], default='EN_ATTENTE', help_text='Statut du billet', max_length=20, verbose_name='Statut')),
                ('code_qr', models.ImageField(blank=True, help_text='Code QR pour la validation', upload_to='tickets/qr/', verbose_name='Code QR')),
                ('date_achat', models.DateTimeField(auto_now_add=True, help_text="Date d'achat du billet", verbose_name="Date d'achat")),
                ('date_utilisation', models.DateTimeField(blank=True, help_text="Date d'utilisation du billet", null=True, verbose_name="Date d'utilisation")),
                ('reference_paiement', models.CharField(blank=True, help_text='Référence du paiement Mobile Money', max_length=100, verbose_name='Référence de paiement')),
            ],
            options={
                'verbose_name': "Billet d'événement",
                'verbose_name_plural': "Billets d'événement",
                'ordering': ['-date_achat'],
            },
        ),
    ]
