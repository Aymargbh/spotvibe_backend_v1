# Generated by Django 5.2.4 on 2025-08-02 10:55

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('events', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='MomoTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('operateur', models.CharField(choices=[('MTN', 'MTN Bénin'), ('MOOV', 'Moov Africa Bénin')], help_text='Opérateur Mobile Money', max_length=10, verbose_name='Opérateur')),
                ('numero_telephone', models.CharField(help_text='Numéro de téléphone Mobile Money', max_length=15, verbose_name='Numéro de téléphone')),
                ('type_transaction', models.CharField(choices=[('PAYMENT', 'Paiement'), ('REFUND', 'Remboursement'), ('TRANSFER', 'Transfert')], default='PAYMENT', help_text='Type de transaction Mobile Money', max_length=20, verbose_name='Type de transaction')),
                ('transaction_id', models.CharField(help_text="Identifiant unique de la transaction chez l'opérateur", max_length=100, unique=True, verbose_name='ID de transaction')),
                ('reference_operateur', models.CharField(blank=True, help_text="Référence fournie par l'opérateur", max_length=100, verbose_name='Référence opérateur')),
                ('code_reponse', models.CharField(blank=True, help_text="Code de réponse de l'opérateur", max_length=10, verbose_name='Code de réponse')),
                ('message_reponse', models.TextField(blank=True, help_text="Message de réponse de l'opérateur", verbose_name='Message de réponse')),
                ('date_initiation', models.DateTimeField(auto_now_add=True, help_text="Date d'initiation de la transaction", verbose_name="Date d'initiation")),
                ('date_confirmation', models.DateTimeField(blank=True, help_text="Date de confirmation par l'opérateur", null=True, verbose_name='Date de confirmation')),
                ('webhook_recu', models.BooleanField(default=False, help_text='Webhook de confirmation reçu', verbose_name='Webhook reçu')),
                ('donnees_webhook', models.JSONField(blank=True, default=dict, help_text='Données reçues via webhook', verbose_name='Données webhook')),
            ],
            options={
                'verbose_name': 'Transaction Mobile Money',
                'verbose_name_plural': 'Transactions Mobile Money',
                'ordering': ['-date_initiation'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identifiant unique du paiement', unique=True, verbose_name='Identifiant unique')),
                ('type_paiement', models.CharField(choices=[('ABONNEMENT', 'Abonnement'), ('BILLET', "Billet d'événement"), ('COMMISSION', 'Commission'), ('REMBOURSEMENT', 'Remboursement')], help_text='Type de paiement effectué', max_length=20, verbose_name='Type de paiement')),
                ('montant', models.DecimalField(decimal_places=2, help_text='Montant du paiement en FCFA', max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Montant')),
                ('frais', models.DecimalField(decimal_places=2, default=0, help_text='Frais de transaction en FCFA', max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Frais')),
                ('montant_net', models.DecimalField(decimal_places=2, help_text='Montant net reçu (montant - frais)', max_digits=12, verbose_name='Montant net')),
                ('statut', models.CharField(choices=[('EN_ATTENTE', 'En attente'), ('EN_COURS', 'En cours'), ('REUSSI', 'Réussi'), ('ECHEC', 'Échec'), ('ANNULE', 'Annulé'), ('REMBOURSE', 'Remboursé')], default='EN_ATTENTE', help_text='Statut du paiement', max_length=20, verbose_name='Statut')),
                ('methode_paiement', models.CharField(choices=[('MOMO_MTN', 'Mobile Money MTN'), ('MOMO_MOOV', 'Mobile Money Moov'), ('CARTE_BANCAIRE', 'Carte bancaire'), ('VIREMENT', 'Virement bancaire'), ('ESPECES', 'Espèces')], help_text='Méthode de paiement utilisée', max_length=20, verbose_name='Méthode de paiement')),
                ('reference_externe', models.CharField(blank=True, help_text='Référence du prestataire de paiement', max_length=100, verbose_name='Référence externe')),
                ('reference_interne', models.CharField(blank=True, help_text='Référence interne SpotVibe', max_length=50, verbose_name='Référence interne')),
                ('description', models.TextField(blank=True, help_text='Description du paiement', verbose_name='Description')),
                ('date_creation', models.DateTimeField(auto_now_add=True, help_text='Date de création du paiement', verbose_name='Date de création')),
                ('date_traitement', models.DateTimeField(blank=True, help_text='Date de traitement du paiement', null=True, verbose_name='Date de traitement')),
                ('date_expiration', models.DateTimeField(blank=True, help_text="Date d'expiration du paiement", null=True, verbose_name="Date d'expiration")),
                ('telephone_paiement', models.CharField(blank=True, help_text='Numéro de téléphone utilisé pour le paiement', max_length=15, verbose_name='Téléphone de paiement')),
                ('donnees_reponse', models.JSONField(blank=True, default=dict, help_text='Données de réponse du prestataire de paiement', verbose_name='Données de réponse')),
            ],
            options={
                'verbose_name': 'Paiement',
                'verbose_name_plural': 'Paiements',
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='Refund',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('montant_remboursement', models.DecimalField(decimal_places=2, help_text='Montant à rembourser', max_digits=12, verbose_name='Montant de remboursement')),
                ('raison', models.CharField(choices=[('ANNULATION_EVENT', "Annulation d'événement"), ('DEMANDE_CLIENT', 'Demande client'), ('ERREUR_PAIEMENT', 'Erreur de paiement'), ('FRAUDE', 'Fraude détectée'), ('AUTRE', 'Autre raison')], help_text='Raison du remboursement', max_length=30, verbose_name='Raison')),
                ('description', models.TextField(help_text='Description détaillée de la demande', verbose_name='Description')),
                ('statut', models.CharField(choices=[('DEMANDE', 'Demandé'), ('EN_COURS', 'En cours'), ('APPROUVE', 'Approuvé'), ('REJETE', 'Rejeté'), ('REMBOURSE', 'Remboursé')], default='DEMANDE', help_text='Statut du remboursement', max_length=20, verbose_name='Statut')),
                ('date_demande', models.DateTimeField(auto_now_add=True, help_text='Date de la demande de remboursement', verbose_name='Date de demande')),
                ('date_traitement', models.DateTimeField(blank=True, help_text='Date de traitement de la demande', null=True, verbose_name='Date de traitement')),
                ('date_remboursement', models.DateTimeField(blank=True, help_text='Date effective du remboursement', null=True, verbose_name='Date de remboursement')),
                ('commentaire_admin', models.TextField(blank=True, help_text="Commentaire de l'administrateur", verbose_name='Commentaire administrateur')),
            ],
            options={
                'verbose_name': 'Remboursement',
                'verbose_name_plural': 'Remboursements',
                'ordering': ['-date_demande'],
            },
        ),
        migrations.CreateModel(
            name='Commission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_commission', models.CharField(choices=[('BILLETTERIE', 'Commission billetterie'), ('ABONNEMENT', 'Commission abonnement'), ('SERVICE', 'Commission service')], help_text='Type de commission', max_length=20, verbose_name='Type de commission')),
                ('montant_base', models.DecimalField(decimal_places=2, help_text='Montant sur lequel la commission est calculée', max_digits=12, verbose_name='Montant de base')),
                ('taux_commission', models.DecimalField(decimal_places=2, help_text='Taux de commission en pourcentage', max_digits=5, verbose_name='Taux de commission')),
                ('montant_commission', models.DecimalField(decimal_places=2, help_text='Montant de commission calculé', max_digits=10, verbose_name='Montant de commission')),
                ('statut', models.CharField(choices=[('EN_ATTENTE', 'En attente'), ('CALCULEE', 'Calculée'), ('PAYEE', 'Payée'), ('ANNULEE', 'Annulée')], default='EN_ATTENTE', help_text='Statut de la commission', max_length=20, verbose_name='Statut')),
                ('date_calcul', models.DateTimeField(auto_now_add=True, help_text='Date de calcul de la commission', verbose_name='Date de calcul')),
                ('date_paiement', models.DateTimeField(blank=True, help_text='Date de paiement de la commission', null=True, verbose_name='Date de paiement')),
                ('notes', models.TextField(blank=True, help_text='Notes sur la commission', verbose_name='Notes')),
                ('event', models.ForeignKey(blank=True, help_text='Événement concerné (si applicable)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='commissions', to='events.event', verbose_name='Événement')),
            ],
            options={
                'verbose_name': 'Commission',
                'verbose_name_plural': 'Commissions',
                'ordering': ['-date_calcul'],
            },
        ),
    ]
