# Generated by Django 5.2.4 on 2025-08-02 10:55

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(help_text='Nom de la campagne', max_length=100, verbose_name='Nom')),
                ('description', models.TextField(blank=True, help_text='Description de la campagne', verbose_name='Description')),
                ('criteres_ciblage', models.JSONField(blank=True, default=dict, help_text='Critères de sélection des destinataires', verbose_name='Critères de ciblage')),
                ('date_planifiee', models.DateTimeField(help_text="Date et heure d'envoi planifiée", verbose_name='Date planifiée')),
                ('statut', models.CharField(choices=[('PLANIFIE', 'Planifié'), ('EN_COURS', 'En cours'), ('TERMINE', 'Terminé'), ('ECHEC', 'Échec'), ('ANNULE', 'Annulé')], default='PLANIFIE', help_text='Statut de la campagne', max_length=20, verbose_name='Statut')),
                ('nombre_destinataires', models.PositiveIntegerField(default=0, help_text='Nombre total de destinataires', verbose_name='Nombre de destinataires')),
                ('nombre_envoyes', models.PositiveIntegerField(default=0, help_text='Nombre de notifications envoyées', verbose_name='Nombre envoyés')),
                ('nombre_livres', models.PositiveIntegerField(default=0, help_text='Nombre de notifications livrées', verbose_name='Nombre livrés')),
                ('nombre_lus', models.PositiveIntegerField(default=0, help_text='Nombre de notifications lues', verbose_name='Nombre lus')),
                ('date_creation', models.DateTimeField(auto_now_add=True, help_text='Date de création de la campagne', verbose_name='Date de création')),
                ('date_debut_envoi', models.DateTimeField(blank=True, help_text="Date de début d'envoi effectif", null=True, verbose_name="Date de début d'envoi")),
                ('date_fin_envoi', models.DateTimeField(blank=True, help_text="Date de fin d'envoi", null=True, verbose_name="Date de fin d'envoi")),
            ],
            options={
                'verbose_name': 'Campagne de notification',
                'verbose_name_plural': 'Campagnes de notification',
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_notification', models.CharField(choices=[('EVENT_CREATED', 'Événement créé'), ('EVENT_APPROVED', 'Événement approuvé'), ('EVENT_REJECTED', 'Événement rejeté'), ('EVENT_REMINDER', "Rappel d'événement"), ('EVENT_CANCELLED', 'Événement annulé'), ('NEW_FOLLOWER', 'Nouveau follower'), ('FOLLOW_EVENT', "Événement d'un suivi"), ('PAYMENT_SUCCESS', 'Paiement réussi'), ('PAYMENT_FAILED', 'Paiement échoué'), ('SUBSCRIPTION_EXPIRING', 'Abonnement expirant'), ('SUBSCRIPTION_EXPIRED', 'Abonnement expiré'), ('TICKET_PURCHASED', 'Billet acheté'), ('VERIFICATION_APPROVED', 'Vérification approuvée'), ('VERIFICATION_REJECTED', 'Vérification rejetée'), ('SYSTEM_MAINTENANCE', 'Maintenance système'), ('WELCOME', 'Bienvenue')], help_text='Type de notification', max_length=30, verbose_name='Type de notification')),
                ('canal', models.CharField(choices=[('EMAIL', 'Email'), ('PUSH', 'Notification push'), ('SMS', 'SMS'), ('IN_APP', "Dans l'application")], help_text='Canal de notification', max_length=10, verbose_name='Canal')),
                ('actif', models.BooleanField(default=True, help_text='Recevoir ce type de notification sur ce canal', verbose_name='Actif')),
                ('frequence', models.CharField(choices=[('IMMEDIATE', 'Immédiate'), ('QUOTIDIEN', 'Quotidien'), ('HEBDOMADAIRE', 'Hebdomadaire'), ('JAMAIS', 'Jamais')], default='IMMEDIATE', help_text='Fréquence de notification', max_length=20, verbose_name='Fréquence')),
                ('heure_envoi', models.TimeField(blank=True, help_text='Heure préférée pour les notifications groupées', null=True, verbose_name="Heure d'envoi")),
                ('date_creation', models.DateTimeField(auto_now_add=True, help_text='Date de création de la préférence', verbose_name='Date de création')),
                ('date_modification', models.DateTimeField(auto_now=True, help_text='Date de dernière modification', verbose_name='Date de modification')),
            ],
            options={
                'verbose_name': 'Préférence de notification',
                'verbose_name_plural': 'Préférences de notification',
                'ordering': ['utilisateur', 'type_notification', 'canal'],
            },
        ),
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_notification', models.CharField(choices=[('EVENT_CREATED', 'Événement créé'), ('EVENT_APPROVED', 'Événement approuvé'), ('EVENT_REJECTED', 'Événement rejeté'), ('EVENT_REMINDER', "Rappel d'événement"), ('EVENT_CANCELLED', 'Événement annulé'), ('NEW_FOLLOWER', 'Nouveau follower'), ('FOLLOW_EVENT', "Événement d'un suivi"), ('PAYMENT_SUCCESS', 'Paiement réussi'), ('PAYMENT_FAILED', 'Paiement échoué'), ('SUBSCRIPTION_EXPIRING', 'Abonnement expirant'), ('SUBSCRIPTION_EXPIRED', 'Abonnement expiré'), ('TICKET_PURCHASED', 'Billet acheté'), ('VERIFICATION_APPROVED', 'Vérification approuvée'), ('VERIFICATION_REJECTED', 'Vérification rejetée'), ('SYSTEM_MAINTENANCE', 'Maintenance système'), ('WELCOME', 'Bienvenue')], help_text='Type de notification', max_length=30, unique=True, verbose_name='Type de notification')),
                ('nom', models.CharField(help_text='Nom du template', max_length=100, verbose_name='Nom')),
                ('description', models.TextField(help_text='Description du template', verbose_name='Description')),
                ('titre_email', models.CharField(blank=True, help_text='Titre pour les notifications email', max_length=200, verbose_name='Titre email')),
                ('contenu_email', models.TextField(blank=True, help_text='Contenu HTML pour les emails', verbose_name='Contenu email')),
                ('titre_push', models.CharField(blank=True, help_text='Titre pour les notifications push', max_length=100, verbose_name='Titre push')),
                ('contenu_push', models.CharField(blank=True, help_text='Contenu pour les notifications push', max_length=200, verbose_name='Contenu push')),
                ('contenu_sms', models.CharField(blank=True, help_text='Contenu pour les SMS (max 160 caractères)', max_length=160, verbose_name='Contenu SMS')),
                ('contenu_in_app', models.TextField(blank=True, help_text="Contenu pour les notifications dans l'application", verbose_name='Contenu in-app')),
                ('canaux_actifs', models.JSONField(default=list, help_text='Liste des canaux activés pour ce template', verbose_name='Canaux actifs')),
                ('variables_disponibles', models.JSONField(default=list, help_text='Variables disponibles pour ce template (ex: {user_name}, {event_title})', verbose_name='Variables disponibles')),
                ('actif', models.BooleanField(default=True, help_text='Template actif', verbose_name='Actif')),
                ('date_creation', models.DateTimeField(auto_now_add=True, help_text='Date de création du template', verbose_name='Date de création')),
                ('date_modification', models.DateTimeField(auto_now=True, help_text='Date de dernière modification', verbose_name='Date de modification')),
            ],
            options={
                'verbose_name': 'Template de notification',
                'verbose_name_plural': 'Templates de notification',
                'ordering': ['type_notification'],
            },
        ),
        migrations.CreateModel(
            name='PushToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.TextField(help_text='Token de notification push', unique=True, verbose_name='Token')),
                ('plateforme', models.CharField(choices=[('ANDROID', 'Android'), ('IOS', 'iOS'), ('WEB', 'Web')], help_text="Plateforme de l'appareil", max_length=10, verbose_name='Plateforme')),
                ('nom_appareil', models.CharField(blank=True, help_text="Nom de l'appareil", max_length=100, verbose_name="Nom de l'appareil")),
                ('version_app', models.CharField(blank=True, help_text="Version de l'application", max_length=20, verbose_name="Version de l'application")),
                ('version_os', models.CharField(blank=True, help_text="Version du système d'exploitation", max_length=20, verbose_name="Version de l'OS")),
                ('actif', models.BooleanField(default=True, help_text="Token actif pour l'envoi de notifications", verbose_name='Actif')),
                ('derniere_utilisation', models.DateTimeField(auto_now=True, help_text='Dernière fois que le token a été utilisé', verbose_name='Dernière utilisation')),
                ('date_creation', models.DateTimeField(auto_now_add=True, help_text="Date d'enregistrement du token", verbose_name='Date de création')),
                ('notifications_envoyees', models.PositiveIntegerField(default=0, help_text='Nombre de notifications envoyées à ce token', verbose_name='Notifications envoyées')),
                ('notifications_livrees', models.PositiveIntegerField(default=0, help_text='Nombre de notifications livrées avec succès', verbose_name='Notifications livrées')),
            ],
            options={
                'verbose_name': 'Token de notification push',
                'verbose_name_plural': 'Tokens de notification push',
                'ordering': ['-derniere_utilisation'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_notification', models.CharField(choices=[('EVENT_CREATED', 'Événement créé'), ('EVENT_APPROVED', 'Événement approuvé'), ('EVENT_REJECTED', 'Événement rejeté'), ('EVENT_REMINDER', "Rappel d'événement"), ('EVENT_CANCELLED', 'Événement annulé'), ('NEW_FOLLOWER', 'Nouveau follower'), ('FOLLOW_EVENT', "Événement d'un suivi"), ('PAYMENT_SUCCESS', 'Paiement réussi'), ('PAYMENT_FAILED', 'Paiement échoué'), ('SUBSCRIPTION_EXPIRING', 'Abonnement expirant'), ('SUBSCRIPTION_EXPIRED', 'Abonnement expiré'), ('TICKET_PURCHASED', 'Billet acheté'), ('VERIFICATION_APPROVED', 'Vérification approuvée'), ('VERIFICATION_REJECTED', 'Vérification rejetée'), ('SYSTEM_MAINTENANCE', 'Maintenance système'), ('WELCOME', 'Bienvenue')], help_text='Type de notification', max_length=30, verbose_name='Type')),
                ('titre', models.CharField(help_text='Titre de la notification', max_length=200, verbose_name='Titre')),
                ('message', models.TextField(help_text='Contenu de la notification', verbose_name='Message')),
                ('object_id', models.PositiveIntegerField(blank=True, help_text="ID de l'objet concerné", null=True)),
                ('priorite', models.CharField(choices=[('BASSE', 'Basse'), ('NORMALE', 'Normale'), ('HAUTE', 'Haute'), ('URGENTE', 'Urgente')], default='NORMALE', help_text='Priorité de la notification', max_length=10, verbose_name='Priorité')),
                ('statut', models.CharField(choices=[('EN_ATTENTE', 'En attente'), ('ENVOYE', 'Envoyé'), ('LIVRE', 'Livré'), ('LU', 'Lu'), ('ECHEC', 'Échec')], default='EN_ATTENTE', help_text='Statut de la notification', max_length=20, verbose_name='Statut')),
                ('date_creation', models.DateTimeField(auto_now_add=True, help_text='Date de création de la notification', verbose_name='Date de création')),
                ('date_envoi', models.DateTimeField(blank=True, help_text="Date d'envoi de la notification", null=True, verbose_name="Date d'envoi")),
                ('date_lecture', models.DateTimeField(blank=True, help_text="Date de lecture par l'utilisateur", null=True, verbose_name='Date de lecture')),
                ('date_expiration', models.DateTimeField(blank=True, help_text="Date d'expiration de la notification", null=True, verbose_name="Date d'expiration")),
                ('lien_action', models.URLField(blank=True, help_text='Lien vers une action spécifique', verbose_name="Lien d'action")),
                ('donnees_supplementaires', models.JSONField(blank=True, default=dict, help_text="Données supplémentaires pour l'application", verbose_name='Données supplémentaires')),
                ('content_type', models.ForeignKey(blank=True, help_text="Type d'objet concerné", null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'ordering': ['-date_creation'],
            },
        ),
    ]
