# Generated by Django 5.2.4 on 2025-08-02 11:00

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DashboardWidget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(help_text='Nom du widget', max_length=100, verbose_name='Nom')),
                ('type_widget', models.CharField(choices=[('STATS', 'Statistiques'), ('CHART', 'Graphique'), ('LIST', 'Liste'), ('COUNTER', 'Compteur'), ('PROGRESS', 'Barre de progression'), ('ALERT', 'Alerte')], help_text='Type de widget', max_length=20, verbose_name='Type de widget')),
                ('titre', models.CharField(help_text='Titre affiché sur le widget', max_length=200, verbose_name='Titre')),
                ('description', models.TextField(blank=True, help_text='Description du widget', verbose_name='Description')),
                ('configuration', models.JSONField(default=dict, help_text='Configuration JSON du widget', verbose_name='Configuration')),
                ('requete_sql', models.TextField(blank=True, help_text='Requête SQL pour récupérer les données', verbose_name='Requête SQL')),
                ('largeur', models.PositiveIntegerField(default=6, help_text='Largeur du widget (1-12 colonnes Bootstrap)', verbose_name='Largeur')),
                ('hauteur', models.PositiveIntegerField(default=300, help_text='Hauteur du widget en pixels', verbose_name='Hauteur')),
                ('ordre', models.PositiveIntegerField(default=0, help_text="Ordre d'affichage sur le dashboard", verbose_name="Ordre d'affichage")),
                ('actif', models.BooleanField(default=True, help_text='Widget actif et visible', verbose_name='Actif')),
                ('date_creation', models.DateTimeField(auto_now_add=True, help_text='Date de création du widget', verbose_name='Date de création')),
                ('date_modification', models.DateTimeField(auto_now=True, help_text='Date de dernière modification', verbose_name='Date de modification')),
                ('createur', models.ForeignKey(help_text='Utilisateur qui a créé ce widget', on_delete=django.db.models.deletion.CASCADE, related_name='widgets_created', to=settings.AUTH_USER_MODEL, verbose_name='Créateur')),
                ('visible_pour', models.ManyToManyField(blank=True, help_text='Utilisateurs pouvant voir ce widget', related_name='dashboard_widgets', to=settings.AUTH_USER_MODEL, verbose_name='Visible pour')),
            ],
            options={
                'verbose_name': 'Widget de dashboard',
                'verbose_name_plural': 'Widgets de dashboard',
                'ordering': ['ordre', 'nom'],
            },
        ),
        migrations.CreateModel(
            name='AdminAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('APPROVE_EVENT', 'Approuver un événement'), ('REJECT_EVENT', 'Rejeter un événement'), ('APPROVE_USER', 'Approuver un utilisateur'), ('REJECT_USER', 'Rejeter un utilisateur'), ('SUSPEND_USER', 'Suspendre un utilisateur'), ('ACTIVATE_USER', 'Activer un utilisateur'), ('PROCESS_REFUND', 'Traiter un remboursement'), ('SEND_NOTIFICATION', 'Envoyer une notification'), ('UPDATE_SETTINGS', 'Modifier les paramètres'), ('EXPORT_DATA', 'Exporter des données'), ('DELETE_CONTENT', 'Supprimer du contenu'), ('MODERATE_CONTENT', 'Modérer du contenu')], help_text="Type d'action effectuée", max_length=30, verbose_name='Action')),
                ('description', models.TextField(help_text="Description détaillée de l'action", verbose_name='Description')),
                ('object_id', models.PositiveIntegerField(blank=True, help_text="ID de l'objet concerné", null=True)),
                ('date_action', models.DateTimeField(auto_now_add=True, help_text="Date et heure de l'action", verbose_name="Date de l'action")),
                ('adresse_ip', models.GenericIPAddressField(blank=True, help_text="Adresse IP de l'administrateur", null=True, verbose_name='Adresse IP')),
                ('donnees_supplementaires', models.JSONField(blank=True, default=dict, help_text="Données supplémentaires sur l'action", verbose_name='Données supplémentaires')),
                ('admin', models.ForeignKey(help_text="Administrateur qui a effectué l'action", on_delete=django.db.models.deletion.CASCADE, related_name='admin_actions', to=settings.AUTH_USER_MODEL, verbose_name='Administrateur')),
                ('content_type', models.ForeignKey(blank=True, help_text="Type d'objet concerné", null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Action administrateur',
                'verbose_name_plural': 'Actions administrateur',
                'ordering': ['-date_action'],
                'indexes': [models.Index(fields=['admin', 'date_action'], name='admin_dashb_admin_i_e389cb_idx'), models.Index(fields=['action', 'date_action'], name='admin_dashb_action_6ea58d_idx')],
            },
        ),
        migrations.CreateModel(
            name='AdminNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_notification', models.CharField(choices=[('VALIDATION_REQUIRED', 'Validation requise'), ('SYSTEM_ALERT', 'Alerte système'), ('SECURITY_ALERT', 'Alerte sécurité'), ('PAYMENT_ISSUE', 'Problème de paiement'), ('USER_REPORT', 'Signalement utilisateur'), ('TECHNICAL_ISSUE', 'Problème technique'), ('MAINTENANCE', 'Maintenance')], help_text='Type de notification', max_length=30, verbose_name='Type')),
                ('titre', models.CharField(help_text='Titre de la notification', max_length=200, verbose_name='Titre')),
                ('message', models.TextField(help_text='Contenu de la notification', verbose_name='Message')),
                ('priorite', models.CharField(choices=[('BASSE', 'Basse'), ('NORMALE', 'Normale'), ('HAUTE', 'Haute'), ('CRITIQUE', 'Critique')], default='NORMALE', help_text='Priorité de la notification', max_length=10, verbose_name='Priorité')),
                ('statut', models.CharField(choices=[('NOUVEAU', 'Nouveau'), ('VU', 'Vu'), ('EN_COURS', 'En cours'), ('RESOLU', 'Résolu'), ('IGNORE', 'Ignoré')], default='NOUVEAU', help_text='Statut de la notification', max_length=15, verbose_name='Statut')),
                ('object_id', models.PositiveIntegerField(blank=True, help_text="ID de l'objet concerné", null=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True, help_text='Date de création de la notification', verbose_name='Date de création')),
                ('date_resolution', models.DateTimeField(blank=True, help_text='Date de résolution de la notification', null=True, verbose_name='Date de résolution')),
                ('lien_action', models.URLField(blank=True, help_text="Lien vers l'action à effectuer", verbose_name="Lien d'action")),
                ('donnees_supplementaires', models.JSONField(blank=True, default=dict, help_text='Données supplémentaires', verbose_name='Données supplémentaires')),
                ('content_type', models.ForeignKey(blank=True, help_text="Type d'objet concerné", null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('destinataires', models.ManyToManyField(help_text='Administrateurs destinataires', related_name='admin_notifications', to=settings.AUTH_USER_MODEL, verbose_name='Destinataires')),
            ],
            options={
                'verbose_name': 'Notification administrateur',
                'verbose_name_plural': 'Notifications administrateur',
                'ordering': ['-date_creation'],
                'indexes': [models.Index(fields=['type_notification', 'statut'], name='admin_dashb_type_no_daf140_idx'), models.Index(fields=['priorite', 'date_creation'], name='admin_dashb_priorit_2058f3_idx')],
            },
        ),
    ]
